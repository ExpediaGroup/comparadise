name: Test

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Validate package.json
        uses: ExpediaGroup/package-json-validator@v1
        with:
          rules: ranges
          dependency-types: |
            dependencies
            devDependencies

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install
        run: npm ci

      - name: Type Check
        run: tsc

      - name: Lint
        run: npm run lint

      - name: Format
        run: npm run format

      - name: Package
        run: npm run package

      - name: Check for any generated code that should be committed
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Detected uncommitted changes after build. See status below:"
            git status
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git add .
            git commit -m "chore: committing generated code"
            git push
            exit 1
          fi

  backend:
    name: Backend Tests
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install
        run: npm ci

      - name: Test
        run: npm run test:backend

  frontend:
    name: Frontend Tests
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install and Test
        uses: cypress-io/github-action@v5
        with:
          component: true

  integration:
    name: Integration Tests
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install
        run: npm ci

      - name: Run Cypress Tests Against Docker Container
        run: npm run test:integration

  utils:
    name: Utils Tests
    needs:
      - lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: utils
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
