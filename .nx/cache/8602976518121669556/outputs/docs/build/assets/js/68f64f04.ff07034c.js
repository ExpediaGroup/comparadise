"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[602],{8512:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=n(5250),i=n(7160);const r={sidebar_position:5},o="Writing Visual Tests",a={id:"setup/writing-visual-tests",title:"Writing Visual Tests",description:"Comparadise relies on Cypress for running tests against web components in the browser.",source:"@site/docs/setup/writing-visual-tests.md",sourceDirName:"setup",slug:"/setup/writing-visual-tests",permalink:"/comparadise/docs/setup/writing-visual-tests",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Setting Up CI/CD",permalink:"/comparadise/docs/setup/cicd"},next:{title:"Creating Base Images",permalink:"/comparadise/docs/usage/creating-base-images"}},c={},l=[{value:"Installing the Cypress Plugin",id:"installing-the-cypress-plugin",level:2},{value:"Configuring Cypress",id:"configuring-cypress",level:2},{value:"Test Setup",id:"test-setup",level:2},{value:"cy.matchScreenshot Arguments",id:"cymatchscreenshot-arguments",level:3},{value:"rawName - optional (String)",id:"rawname---optional-string",level:4},{value:"options - optional (Cypress.ScreenshotOptions)",id:"options---optional-cypressscreenshotoptions",level:4}];function p(e){const s=Object.assign({h1:"h1",p:"p",a:"a",h2:"h2",pre:"pre",code:"code",h3:"h3",h4:"h4"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"writing-visual-tests",children:"Writing Visual Tests"}),"\n",(0,t.jsxs)(s.p,{children:["Comparadise relies on ",(0,t.jsx)(s.a,{href:"https://www.cypress.io/",children:"Cypress"})," for running tests against web components in the browser."]}),"\n",(0,t.jsx)(s.h2,{id:"installing-the-cypress-plugin",children:"Installing the Cypress Plugin"}),"\n",(0,t.jsxs)(s.p,{children:["Install the ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/comparadise-utils",children:"comparadise-utils"})," package using your favorite node package manager."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-shell",children:"npm install --save-dev comparadise-utils\n"})}),"\n",(0,t.jsx)(s.h2,{id:"configuring-cypress",children:"Configuring Cypress"}),"\n",(0,t.jsxs)(s.p,{children:["In ",(0,t.jsx)(s.code,{children:"cypress.config.ts"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { setupVisualTests } from 'comparadise-utils';\n\nexport default defineConfig({\n  component: {\n    setupNodeEvents(on, config) {\n      setupVisualTests(on, config);\n\n      return config;\n    }\n  },\n  e2e: {\n    setupNodeEvents(on, config) {\n      setupVisualTests(on, config);\n\n      return config;\n    }\n  }\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["In ",(0,t.jsx)(s.code,{children:"cypress/support/commands.ts"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import 'comparadise-utils/commands';\nimport 'comparadise-utils/types';\n"})}),"\n",(0,t.jsx)(s.h2,{id:"test-setup",children:"Test Setup"}),"\n",(0,t.jsxs)(s.p,{children:["In a Cypress test that renders your component or visits your site, use the ",(0,t.jsx)(s.code,{children:"cy.matchScreenshot()"})," command to execute a visual test.\nThis will take a screenshot of whatever Cypress is currently displaying, compare it to a ",(0,t.jsx)(s.code,{children:"base.png"})," that was\npreviously downloaded from S3, and output a ",(0,t.jsx)(s.code,{children:"diff.png"})," and ",(0,t.jsx)(s.code,{children:"new.png"})," if there is a visual change."]}),"\n",(0,t.jsx)(s.p,{children:"Example test:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:"describe('MyComponent visual test', () => {\n  it('should verify MyComponent looks the same', () => {\n    cy.mount(<MyComponent inputs={mockInputs} />);\n\n    cy.matchScreenshot();\n  });\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"cymatchscreenshot-arguments",children:"cy.matchScreenshot Arguments"}),"\n",(0,t.jsx)(s.h4,{id:"rawname---optional-string",children:"rawName - optional (String)"}),"\n",(0,t.jsxs)(s.p,{children:["By default, ",(0,t.jsx)(s.code,{children:"matchScreenshot"})," will infer the name of your test from the name of your file and create a folder to save the base, new, and diff images to."]}),"\n",(0,t.jsxs)(s.p,{children:["However, if you have multiple visual tests in a single file, you should pass a different ",(0,t.jsx)(s.code,{children:"rawName"})," for each test to vary the paths where screenshots will be saved."]}),"\n",(0,t.jsx)(s.h4,{id:"options---optional-cypressscreenshotoptions",children:"options - optional (Cypress.ScreenshotOptions)"}),"\n",(0,t.jsxs)(s.p,{children:["Learn more about the ",(0,t.jsx)(s.code,{children:"options"})," argument definition in ",(0,t.jsx)(s.a,{href:"https://docs.cypress.io/api/commands/screenshot.html#Arguments",children:"Cypress' official docs"}),"."]})]})}const d=function(e={}){const{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(p,e)})):p(e)}},7160:(e,s,n)=>{n.d(s,{Zo:()=>a,ah:()=>r});var t=n(79);const i=t.createContext({});function r(e){const s=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const o={};function a({components:e,children:s,disableParentContext:n}){let a;return a=n?"function"==typeof e?e({}):e||o:r(e),t.createElement(i.Provider,{value:a},s)}}}]);